{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  favorites: [],\n  films: []\n};\nexport const actionTypes = {\n  ADD_DATA: \"ADD_DATA\",\n  ADD_FAVORITES: \"ADD_FAVORITES\",\n  DELETE_FAVORITES: \"DELETE_FAVORITES\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        films: action.data\n      });\n\n    case actionTypes.ADD_FAVORITES:\n      const exist = state.favorites.find(item => item.imdbID == action.favorite.imdbID);\n\n      if (exist) {\n        return _objectSpread({}, state);\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          favorites: [...state.favorites, action.favorite]\n        });\n      }\n\n    case actionTypes.DELETE_FAVORITES:\n      console.log(\"hola estoy en el reducer delete\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favorites: state.favorites.filter(item => item !== action.film)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":null,"metadata":{},"sourceType":"module"}